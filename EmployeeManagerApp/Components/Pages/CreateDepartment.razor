@inject IUnitOfWork unitOfWork
@inject NavigationManager navManager

   
    <div class="form-group">
        <h3>Create New Department</h3>

    </div>

<EditForm Model="@department" OnValidSubmit="@AddDepartment">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label asp-for="DepartmentName" class="control-label"></label>
        <InputText @bind-Value="@department.DepartmentName" placeholder="Department name" />
        <span asp-validation-for="DepartmentName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</EditForm>

@code
{
    public Department department { get; set; }
    protected override void OnInitialized()
    {
        department = new Department();
       
        base.OnInitialized();
    }

    private async Task AddDepartment()
    {
        await unitOfWork.Departments.Add(department);
        await unitOfWork.Save();

        department = new Department();
        
        navManager.ToBaseRelativePath("Deparments");
    }

   
}